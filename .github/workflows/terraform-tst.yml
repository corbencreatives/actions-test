name: 'Terraform TST'

on:
  workflow_dispatch:
#on:
#  workflow_run:
#    workflows: [Publish]
#    branches: [develop, main]
#    types: [completed]

env:
  TF_CLOUD_ORGANIZATION: "corbencreatives"
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  TF_WORKSPACE: "actions-test"
  CONFIG_DIRECTORY: "./terraform"
  TF_VAR_arm_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

jobs:
  terraform-plan:
    name: "Terraform Plan"
    runs-on: ubuntu-latest
#    if: github.event.workflow_run.conclusion == 'success'
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Upload Configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
        id: plan-upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}
          speculative: true

      - name: Create Plan Run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
        id: plan-run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.plan-upload.outputs.configuration_version_id }}
          plan_only: true


      - name: Get Plan Output
        uses: hashicorp/tfc-workflows-github/actions/plan-output@v1.3.2
        id: plan-output
        with:
          plan: ${{ steps.plan-run.outputs.plan_id }}

      - name: Show Plan Output
        uses: actions/github-script@v6
        id: plan-comment
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PLAN_OUTPUT = `#### HCP Terraform Plan Output
          \`\`\`
          Plan: ${{ steps.plan-output.outputs.add }} to add, ${{ steps.plan-output.outputs.change }} to change, ${{ steps.plan-output.outputs.destroy }} to destroy.
          \`\`\`
          [HCP Terraform Plan](${{ steps.plan-run.outputs.run_link }})
          `;
          echo ${PLAN_OUTPUT}

  terraform-apply:
    name: "Terraform Apply"
    needs: terraform-plan
    runs-on: ubuntu-latest
    permissions:
      contents: read
    environment: test
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Upload Configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
        id: apply-upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}

      - name: Create Apply Run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
        id: apply-run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.apply-upload.outputs.configuration_version_id }}

      - name: Apply
        uses: hashicorp/tfc-workflows-github/actions/apply-run@v1.0.0
        if: fromJSON(steps.apply-run.outputs.payload).data.attributes.actions.IsConfirmable
        id: apply
        with:
          run: ${{ steps.apply-run.outputs.run_id }}
          comment: "Apply Run from GitHub Actions CI ${{ github.sha }}"

