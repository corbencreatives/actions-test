name: 'Deploy'

on:
  workflow_run:
    workflows: ['Publish']
#    branches: [develop, main]
    types: [completed]

env:
  REGISTRY: ghcr.io

jobs:
  deploy:
    runs-on: ubuntu-latest
#    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Install helm
        uses: azure/setup-helm@v3
        with:
          # version: '<version>' # default is latest (stable)
          token: ${{ secrets.REGISTRY_TOKEN }}

      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Package helm chart
        run: helm package chart

#      - name: Login to registry
#        run: helm registry login ${{ env.REGISTRY }}/${{ github.repository_owner }} -u ${{ github.repository_owner }} -p ${{ secrets.REGISTRY_TOKEN }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Push chart to registry
        run: helm push ./actions-test-0.1.0.tgz oci://${{ env.REGISTRY }}/${{ github.repository_owner }}/charts

#      - name: Install kubectl
#        uses: azure/setup-kubectl@v4.0.0
##        with:
##          version: 'v4.0.0' # default is latest stable
#
#      - name: Create kube config
#        uses: azure/k8s-set-context@v3
#        with:
#          method: kubeconfig
#          kubeconfig: ${{ secrets.KUBE_CONFIG }}

#      # Set up the kubeconfig from the secret
#      - name: Set up kubeconfig
#        run: echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > ./kube_config

      # Log in to Azure using OIDC
      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

      # Configure kubectl for AKS
      - name: Set up kubectl for AKS
        run: |
          az aks get-credentials --resource-group rg-cicd-apps --name cicdcluster

      - name: Deploy to k8s
        run: |
          helm upgrade --install actions-test oci://${{ env.REGISTRY }}/${{ github.repository_owner }}/charts/actions-test --version 0.1.0 --namespace cicd --create-namespace --insecure-skip-tls-verify

